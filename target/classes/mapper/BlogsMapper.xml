<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.hfbin.dao.BlogsMapper" >
  <resultMap id="BaseResultBlogsWithImageWithPath" type="cn.hfbin.beans.Blogs" >
    <id column="blogs_id" property="blogsId" jdbcType="INTEGER" />
    <result column="blogs_title" property="blogsTitle" jdbcType="VARCHAR" />
    <result column="blogs_type" property="blogsType" jdbcType="VARCHAR" />
    <result column="blogs_copr" property="blogsCopr" jdbcType="VARCHAR" />
    <result column="blog_boss" property="blogBoss" jdbcType="VARCHAR" />
    <result column="blogs_content" property="blogsContent" jdbcType="VARCHAR" />
    <result column="blogs_page_view" property="blogsPageView" jdbcType="INTEGER" />
    <result column="blogs_data" property="blogsData" jdbcType="DATE" />
    <result column="file_id" property="fileId" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <association property="blogsImagePath" javaType="cn.hfbin.beans.BlogsImagePath">
      <id column="file_id" property="fileId"/>
      <result column="file_name" property="fileName"/>
      <result column="file_path" property="filePath"/>
    </association>
    <association property="blogsTypes" javaType="cn.hfbin.beans.BlogsType">
      <id column="type_id" property="typeId"/>
      <result column="type_name" property="typeName"/>
    </association>
  </resultMap>
  <resultMap id="BaseResultMap" type="cn.hfbin.beans.Blogs" >
    <id column="blogs_id" property="blogsId" jdbcType="INTEGER" />
    <result column="blogs_title" property="blogsTitle" jdbcType="VARCHAR" />
    <result column="blogs_type" property="blogsType" jdbcType="VARCHAR" />
    <result column="blogs_copr" property="blogsCopr" jdbcType="VARCHAR" />
    <result column="blog_boss" property="blogBoss" jdbcType="VARCHAR" />
    <result column="blogs_page_view" property="blogsPageView" jdbcType="INTEGER" />
    <result column="blogs_data" property="blogsData" jdbcType="DATE" />
    <result column="file_id" property="fileId" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.hfbin.beans.Blogs" extends="BaseResultMap" >
    <result column="blogs_content" property="blogsContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    blogs_id, blogs_title, blogs_type, blogs_copr, blog_boss, blogs_content, blogs_page_view, blogs_data,
    file_id, type_id
  </sql>
  <sql id="Base_Column_List_With" >
    a.blogs_id, a.blogs_title, a.blogs_type, a.blogs_copr, a.blog_boss, a.blogs_content, a.blogs_page_view, a.blogs_data,
    a.file_id,a.type_id,
    e.file_id, e.file_name , e.file_path, b.type_id , b.type_name
  </sql>
  <!--带类型以及图片的博客 List<Blogs> selectBlogsWithImageWithPath(BlogsExample example);-->
  <select id="selectBlogsWithImageWithPath" resultMap="BaseResultBlogsWithImageWithPath"  >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List_With" />
    FROM blogs a
    left join blogs_type b on b.`type_id`=a.`type_id`
    left join blogs_image_path e on e.`file_id`=a.`file_id`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by a.blogs_page_view
    </if>
  </select>
  <!--Blogs selectBlogsWithType(Integer blogsId);-->
  <select id="selectBlogsWithType" resultMap="BaseResultBlogsWithImageWithPath" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List_With" />
    FROM blogs a
    left join blogs_type b on b.`type_id`=a.`type_id`
    left join blogs_image_path e on e.`file_id`=a.`file_id`
    where blogs_id = #{blogsId,jdbcType=INTEGER}
  </select>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.hfbin.beans.BlogsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />

    from blogs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.hfbin.beans.BlogsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blogs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from blogs
    where blogs_id = #{blogsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blogs
    where blogs_id = #{blogsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.hfbin.beans.BlogsExample" >
    delete from blogs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="blogsId" parameterType="cn.hfbin.beans.Blogs"  >
    insert into blogs (blogs_id, blogs_title, blogs_type, 
      blogs_copr, blog_boss, blogs_page_view, 
      blogs_data, file_id, type_id, 
      blogs_content)
    values (#{blogsId,jdbcType=INTEGER}, #{blogsTitle,jdbcType=VARCHAR}, #{blogsType,jdbcType=VARCHAR}, 
      #{blogsCopr,jdbcType=VARCHAR}, #{blogBoss,jdbcType=VARCHAR}, #{blogsPageView,jdbcType=INTEGER}, 
      #{blogsData,jdbcType=DATE}, #{fileId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, 
      #{blogsContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.hfbin.beans.Blogs" >
    insert into blogs
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="blogsId != null" >
        blogs_id,
      </if>
      <if test="blogsTitle != null" >
        blogs_title,
      </if>
      <if test="blogsType != null" >
        blogs_type,
      </if>
      <if test="blogsCopr != null" >
        blogs_copr,
      </if>
      <if test="blogBoss != null" >
        blog_boss,
      </if>
      <if test="blogsPageView != null" >
        blogs_page_view,
      </if>
      <if test="blogsData != null" >
        blogs_data,
      </if>
      <if test="fileId != null" >
        file_id,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="blogsContent != null" >
        blogs_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="blogsId != null" >
        #{blogsId,jdbcType=INTEGER},
      </if>
      <if test="blogsTitle != null" >
        #{blogsTitle,jdbcType=VARCHAR},
      </if>
      <if test="blogsType != null" >
        #{blogsType,jdbcType=VARCHAR},
      </if>
      <if test="blogsCopr != null" >
        #{blogsCopr,jdbcType=VARCHAR},
      </if>
      <if test="blogBoss != null" >
        #{blogBoss,jdbcType=VARCHAR},
      </if>
      <if test="blogsPageView != null" >
        #{blogsPageView,jdbcType=INTEGER},
      </if>
      <if test="blogsData != null" >
        #{blogsData,jdbcType=DATE},
      </if>
      <if test="fileId != null" >
        #{fileId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="blogsContent != null" >
        #{blogsContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hfbin.beans.BlogsExample" resultType="java.lang.Integer" >
    select count(*) from blogs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update blogs
    <set >
      <if test="record.blogsId != null" >
        blogs_id = #{record.blogsId,jdbcType=INTEGER},
      </if>
      <if test="record.blogsTitle != null" >
        blogs_title = #{record.blogsTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.blogsType != null" >
        blogs_type = #{record.blogsType,jdbcType=VARCHAR},
      </if>
      <if test="record.blogsCopr != null" >
        blogs_copr = #{record.blogsCopr,jdbcType=VARCHAR},
      </if>
      <if test="record.blogBoss != null" >
        blog_boss = #{record.blogBoss,jdbcType=VARCHAR},
      </if>
      <if test="record.blogsPageView != null" >
        blogs_page_view = #{record.blogsPageView,jdbcType=INTEGER},
      </if>
      <if test="record.blogsData != null" >
        blogs_data = #{record.blogsData,jdbcType=DATE},
      </if>
      <if test="record.fileId != null" >
        file_id = #{record.fileId,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.blogsContent != null" >
        blogs_content = #{record.blogsContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update blogs
    set blogs_id = #{record.blogsId,jdbcType=INTEGER},
      blogs_title = #{record.blogsTitle,jdbcType=VARCHAR},
      blogs_type = #{record.blogsType,jdbcType=VARCHAR},
      blogs_copr = #{record.blogsCopr,jdbcType=VARCHAR},
      blog_boss = #{record.blogBoss,jdbcType=VARCHAR},
      blogs_page_view = #{record.blogsPageView,jdbcType=INTEGER},
      blogs_data = #{record.blogsData,jdbcType=DATE},
      file_id = #{record.fileId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      blogs_content = #{record.blogsContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update blogs
    set blogs_id = #{record.blogsId,jdbcType=INTEGER},
      blogs_title = #{record.blogsTitle,jdbcType=VARCHAR},
      blogs_type = #{record.blogsType,jdbcType=VARCHAR},
      blogs_copr = #{record.blogsCopr,jdbcType=VARCHAR},
      blog_boss = #{record.blogBoss,jdbcType=VARCHAR},
      blogs_page_view = #{record.blogsPageView,jdbcType=INTEGER},
      blogs_data = #{record.blogsData,jdbcType=DATE},
      file_id = #{record.fileId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hfbin.beans.Blogs" >
    update blogs
    <set >
      <if test="blogsTitle != null" >
        blogs_title = #{blogsTitle,jdbcType=VARCHAR},
      </if>
      <if test="blogsType != null" >
        blogs_type = #{blogsType,jdbcType=VARCHAR},
      </if>
      <if test="blogsCopr != null" >
        blogs_copr = #{blogsCopr,jdbcType=VARCHAR},
      </if>
      <if test="blogBoss != null" >
        blog_boss = #{blogBoss,jdbcType=VARCHAR},
      </if>
      <if test="blogsPageView != null" >
        blogs_page_view = #{blogsPageView,jdbcType=INTEGER},
      </if>
      <if test="blogsData != null" >
        blogs_data = #{blogsData,jdbcType=DATE},
      </if>
      <if test="fileId != null" >
        file_id = #{fileId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="blogsContent != null" >
        blogs_content = #{blogsContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where blogs_id = #{blogsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.hfbin.beans.Blogs" >
    update blogs
    set blogs_title = #{blogsTitle,jdbcType=VARCHAR},
      blogs_type = #{blogsType,jdbcType=VARCHAR},
      blogs_copr = #{blogsCopr,jdbcType=VARCHAR},
      blog_boss = #{blogBoss,jdbcType=VARCHAR},
      blogs_page_view = #{blogsPageView,jdbcType=INTEGER},
      blogs_data = #{blogsData,jdbcType=DATE},
      file_id = #{fileId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      blogs_content = #{blogsContent,jdbcType=LONGVARCHAR}
    where blogs_id = #{blogsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hfbin.beans.Blogs" >
    update blogs
    set blogs_title = #{blogsTitle,jdbcType=VARCHAR},
      blogs_type = #{blogsType,jdbcType=VARCHAR},
      blogs_copr = #{blogsCopr,jdbcType=VARCHAR},
      blog_boss = #{blogBoss,jdbcType=VARCHAR},
      blogs_page_view = #{blogsPageView,jdbcType=INTEGER},
      blogs_data = #{blogsData,jdbcType=DATE},
      file_id = #{fileId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER}
    where blogs_id = #{blogsId,jdbcType=INTEGER}
  </update>
</mapper>